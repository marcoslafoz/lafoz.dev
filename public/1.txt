# VLAN (Switch)
```
enable
configure terminal
vlan 10
name ventas
interface FastEthernet 0/1
switchport mode access
switchport access vlan 10
exit
```

# TRUNK MODE (Switch)
```
interface GigabitEthernet 0/1
switchport mode trunk
switchport trunk allowed vlan 10,20
exit
```
## VLAN TRUNK DEFAULT (Opcional)
```
switchport trunk native vlan 99
```

#  VTP - Propagación (Switch)
```
enable
configure terminal
vtp domain miempresa.com
vtp mode server
vtp version 2
// vtp password contrasena
exit
enable
configure terminal
vtp domain miempresa.com
vtp mode client
// vtp password contrasena
exit
```


## STATUS
```
show vlan brief
show vtp status
show interfaces trunk
show running-config interface FastEthernet 0/1
write memory
```

# DHCP (Router)
```

enable
configure terminal
ip routing
interface vlan 1
ip address 192.168.1.1 255.255.255.0
no shut
ip dhcp pool RED_LOCAL
network 192.168.1.0 255.255.255.0
default-router 192.168.1.1
dns-server 8.8.8.8 8.8.4.4
ip dhcp excluded-address 192.168.1.1 192.168.1.10
// lease 8
service dhcp
```

## STATUS
```
show ip dhcp binding
show ip dhcp pool
show running-config
write memory
```

# ETHERCHANNEL (SWITCH)
```
enable
configure terminal
interface range FastEthernet 0/1 - 2
// LACP active - passive - on (o-o, a-a, a-p)
channel-group 1 mode active
// PAgP desirable - auto (d-d, d-a)
channel-group 1 mode desirable
interface Port-channel 1
switchport mode trunk
switchport trunk allowed vlan all
# SWITCH STATUS write memory
show etherchannel summary
```

# STP (Switch)
```
enable
configure terminal
spanning-tree vlan 1 priority 0
// spanning-tree vlan 1 root secondary
// spanning-tree mode rapid-pvst
// SWITCH PORTFAST (Host)
interface FastEthernet 0/10
spanning-tree portfast
// SWITCH STATUS write memory
show spanning-tree
show spanning-tree active
```

# ACL (Router)
```
Red: 192.168.1.0/24 → Máscara 255.255.255.0
Wildcard: 0.0.0.255
```

## ACL estándar

```
access-list 1 permit 192.168.1.0 0.0.0.255
```
## ACL extendida

```
access-list 100 permit tcp 192.168.1.0 0.0.0.255 any eq 80
```

## ACL Nombrada
```
ip access-list extended FILTRO_WEB
permit tcp 192.168.1.0 0.0.0.255 any eq 80
deny ip any any
exit
// Aplicarla
interface FastEthernet 0/0
ip access-group 100 in / out
exit
show access-lists
```

# CONFIGURACIÓN BÁSICA
```

interface fa0/0
ip address 192.168.1.1 255.255.255.0
ip domain-name "dominio.com"
crypto key generate rsa
username nombreUsuario privilege 15 secret contraseña123
line vty 0 4
login local
transport input ssh

show running-config
copy running-config startup-config

Router1(config)# ip route 192.168.2.0 255.255.255.0 10.0.0.2
ip route <RED_DESTINO> <MÁSCARA> <GATEWAY/INTERFAZ por la que tiene que pasar>


---------------
---------------
---------------

Configuracion Basica Switch
hostname NombreDelSwitch
line vty 0 15
password TuContraseñaVTY
login
enable secret “TuContraseñaEnable”
copy running-config startup-config

Configurar VLAN
vlan [ID_VLAN]
name [nombre_VLAN]
interface [tipo_interface] [número_interface]
switchport mode access
switchport access vlan [ID_VLAN]
interface [tipo_interface] [número_interface]
switchport mode trunk
switchport trunk allowed vlan [ID_VLAN]

interface vlan 10
ip address 192.168.10.1 255.255.255.0
no shutdown


Spanning tree
spanning-tree mode [pvst | rapid-pvst | mst]
spanning-tree vlan [ID_VLAN] priority [valor_prioridad]
interface [tipo_interface] [número_interface]
spanning-tree cost [valor_costo]

Montar DHCP en Router
ip dhcp pool [nombre_pool]
network [dirección_red] [máscara_subred]
default-router [dirección_IP_puerta_enlace]
dns-server [dirección_IP_servidor_DNS]
ip dhcp excluded-address [dirección_IP_inicial] [dirección_IP_final]

Listas ACL
access-list [número] [permit | deny] [dirección_IP] [wildcard_mask]
(access-list 10 permit 192.168.1.0 0.0.0.255)
interface [tipo_interface] [número_interface]
ip access-group [número] [in | out]
(interface GigabitEthernet0/1)
(ip access-group 10 in)


Listas ACL Ext.
access-list [número] [permit | deny] [protocolo] [dirección_IP_origen] [wildcard_mask] [dirección_IP_destino] [wildcard_mask] [eq | gt | lt | neq | range] [puerto]
(access-list 100 permit tcp 192.168.1.0 0.0.0.255 any eq 80)
interface [tipo_interface] [número_interface]
ip access-group [número] [in | out]
(interface GigabitEthernet0/1)
(ip access-group 100 out)

ACL Extra
show access-lists
no access-list [número]
access-list [número] [permit | deny] [dirección_IP] [wildcard_mask]

VTP
vtp domain NombreDelDominio
vtp mode server
O
vtp mode cliente
interface fa0/1
switchport mode trunk

DHCP
dhcp pool RED_LOCAL 
network [dirección_IP][wildcard_mask]
default-router [dirección_IP]
dns-server [red]
ip dhcp excluded-address [dirección_IP]entre[dirección_IP]
show ip dhcp binding
show ip dhcp pool
show running-config
interface GigabitEthernet 0/1 
ip helper-address  [dirección_IP]

# VLAN (Switch)
```
enable
configure terminal
vlan 10
name ventas
interface FastEthernet 0/1
switchport mode access
switchport access vlan 10
exit
```

# TRUNK MODE (Switch)
```
interface GigabitEthernet 0/1
switchport mode trunk
switchport trunk allowed vlan 10,20
exit
```
## VLAN TRUNK DEFAULT (Opcional)
```
switchport trunk native vlan 99
```

#  VTP - Propagación (Switch)
```
enable
configure terminal
vtp domain miempresa.com
vtp mode server
vtp version 2
// vtp password contrasena
exit
enable
configure terminal
vtp domain miempresa.com
vtp mode client
// vtp password contrasena
exit
```


## STATUS
```
show vlan brief
show vtp status
show interfaces trunk
show running-config interface FastEthernet 0/1
write memory
```

# DHCP (Router)
```

enable
configure terminal
ip routing
interface vlan 1
ip address 192.168.1.1 255.255.255.0
no shut
ip dhcp pool RED_LOCAL
network 192.168.1.0 255.255.255.0
default-router 192.168.1.1
dns-server 8.8.8.8 8.8.4.4
ip dhcp excluded-address 192.168.1.1 192.168.1.10
// lease 8
service dhcp
```

## STATUS
```
show ip dhcp binding
show ip dhcp pool
show running-config
write memory
```

# ETHERCHANNEL (SWITCH)
```
enable
configure terminal
interface range FastEthernet 0/1 - 2
// LACP active - passive - on (o-o, a-a, a-p)
channel-group 1 mode active
// PAgP desirable - auto (d-d, d-a)
channel-group 1 mode desirable
interface Port-channel 1
switchport mode trunk
switchport trunk allowed vlan all
# SWITCH STATUS write memory
show etherchannel summary
```

# STP (Switch)
```
enable
configure terminal
spanning-tree vlan 1 priority 0
// spanning-tree vlan 1 root secondary
// spanning-tree mode rapid-pvst
// SWITCH PORTFAST (Host)
interface FastEthernet 0/10
spanning-tree portfast
// SWITCH STATUS write memory
show spanning-tree
show spanning-tree active
```

# ACL (Router)
```
Red: 192.168.1.0/24 → Máscara 255.255.255.0
Wildcard: 0.0.0.255
```

## ACL estándar

```
access-list 1 permit 192.168.1.0 0.0.0.255
```
## ACL extendida

```
access-list 100 permit tcp 192.168.1.0 0.0.0.255 any eq 80
```

## ACL Nombrada
```
ip access-list extended FILTRO_WEB
permit tcp 192.168.1.0 0.0.0.255 any eq 80
deny ip any any
exit
// Aplicarla
interface FastEthernet 0/0
ip access-group 100 in / out
exit
show access-lists
```

# CONFIGURACIÓN BÁSICA
```

interface fa0/0
ip address 192.168.1.1 255.255.255.0
ip domain-name "dominio.com"
crypto key generate rsa
username nombreUsuario privilege 15 secret contraseña123
line vty 0 4
login local
transport input ssh

show running-config
copy running-config startup-config

Router1(config)# ip route 192.168.2.0 255.255.255.0 10.0.0.2
ip route <RED_DESTINO> <MÁSCARA> <GATEWA

---------------
---------------
---------------

Guía de configuración de un servidor DHCP en Cisco Packet Tracer

Topología:
- 2 PCs: PC0 y PC1
- 2 Switches: Switch0 y Switch1
- 2 Routers: Router0 (izquierda) y Router1 (derecha)
- Conexión entre routers por G0/0/0
- Cada PC conectada a un switch
- Cada switch conectado a su router respectivo

Tabla de Direcciones IP Propuesta:

Dispositivo        Interfaz     Dirección IP      Máscara           Descripción
-----------------------------------------------------------------------------------------
Router0            G0/0/0       192.168.12.1      255.255.255.0     Enlace entre routers
Router0            G0/0/1       192.168.10.1      255.255.255.0     LAN izquierda
Router1            G0/0/0       192.168.12.2      255.255.255.0     Enlace entre routers
Router1            G0/0/1       192.168.20.1      255.255.255.0     LAN derecha
PC0                Fa0          DHCP              -                 Configurado por DHCP
PC1                Fa0          DHCP              -                 Configurado por DHCP

Pasos de Configuración:

1. Configurar interfaces en Router0:

Router0> enable
Router0# configure terminal
Router0(config)# interface g0/0/0
Router0(config-if)# ip address 192.168.12.1 255.255.255.0
Router0(config-if)# no shutdown
Router0(config-if)# exit
Router0(config)# interface g0/0/1
Router0(config-if)# ip address 192.168.10.1 255.255.255.0
Router0(config-if)# no shutdown
Router0(config-if)# exit

2. Configurar DHCP en Router0:

Router0(config)# ip dhcp excluded-address 192.168.10.1 192.168.10.10
Router0(config)# ip dhcp pool LAN-IZQUIERDA
Router0(dhcp-config)# network 192.168.10.0 255.255.255.0
Router0(dhcp-config)# default-router 192.168.10.1
Router0(dhcp-config)# dns-server 8.8.8.8
Router0(dhcp-config)# exit

3. Configurar interfaces en Router1:

Router1> enable
Router1# configure terminal
Router1(config)# interface g0/0/0
Router1(config-if)# ip address 192.168.12.2 255.255.255.0
Router1(config-if)# no shutdown
Router1(config-if)# exit
Router1(config)# interface g0/0/1
Router1(config-if)# ip address 192.168.20.1 255.255.255.0
Router1(config-if)# no shutdown
Router1(config-if)# exit

4. Configurar DHCP en Router1:

Router1(config)# ip dhcp excluded-address 192.168.20.1 192.168.20.10
Router1(config)# ip dhcp pool LAN-DERECHA
Router1(dhcp-config)# network 192.168.20.0 255.255.255.0
Router1(dhcp-config)# default-router 192.168.20.1
Router1(dhcp-config)# dns-server 8.8.8.8
Router1(dhcp-config)# exit

5. Configurar rutas estáticas para permitir comunicación entre LANs:

En Router0:
Router0(config)# ip route 192.168.20.0 255.255.255.0 192.168.12.2

En Router1:
Router1(config)# ip route 192.168.10.0 255.255.255.0 192.168.12.1

6. Configurar las PCs para usar DHCP:

En PC0:
- Ir a Desktop > IP Configuration > Seleccionar DHCP

En PC1:
- Ir a Desktop > IP Configuration > Seleccionar DHCP

7. Verificación:

- Ejecutar el comando "ipconfig" en ambas PCs para verificar la asignación automática de IP.
- Realizar pruebas de conectividad con "ping" entre las PCs.


--------------
--------------
--------------

Guía práctica del comando ip route en Cisco IOS

Descripción:
El comando `ip route` se utiliza para configurar rutas estáticas en routers Cisco. Este comando le indica al router cómo llegar a redes que no están conectadas directamente.

Sintaxis básica:
ip route [RED_DESTINO] [MÁSCARA] [PRÓXIMO_SALTO | INTERFAZ_DE_SALIDA]

Parámetros:
- RED_DESTINO: La red a la que se quiere llegar.
- MÁSCARA: La máscara de subred correspondiente a la red de destino.
- PRÓXIMO_SALTO: La dirección IP del siguiente router (gateway).
- INTERFAZ_DE_SALIDA: Interfaz por la que se debe enviar el tráfico (opcional pero útil en redes sencillas).

Ejemplo 1: Ruta estática usando dirección del próximo salto
Supongamos que el router tiene la red local 192.168.1.0/24 y debe alcanzar 10.0.0.0/8 a través del router vecino con IP 192.168.1.2.

Comando:
ip route 10.0.0.0 255.0.0.0 192.168.1.2

Este comando le indica al router que para llegar a la red 10.0.0.0/8 debe enviar los paquetes al router con IP 192.168.1.2.

Ejemplo 2: Ruta estática usando interfaz de salida
ip route 172.16.0.0 255.255.0.0 GigabitEthernet0/0

En este caso, el router enviará paquetes destinados a la red 172.16.0.0/16 directamente por la interfaz G0/0.

Ejemplo 3: Ruta estática con interfaz de salida y siguiente salto
ip route 192.168.2.0 255.255.255.0 GigabitEthernet0/1 192.168.1.2

Este formato más completo especifica tanto la interfaz como el siguiente salto.

Ejemplo 4: Ruta por defecto (default route)
Una ruta por defecto se usa cuando el router no conoce otra ruta específica.

ip route 0.0.0.0 0.0.0.0 192.168.1.1

Este comando indica que cualquier tráfico hacia una red no conocida será enviado a la dirección 192.168.1.1 (el gateway de salida).

Verificación de rutas:

Para verificar que las rutas se han configurado correctamente, usa los siguientes comandos:

- show ip route
  Muestra la tabla de enrutamiento completa.

- show running-config
  Muestra la configuración activa, incluidas las rutas estáticas.

- ping [DIRECCIÓN_DESTINO]
  Permite probar la conectividad hacia una red o dispositivo.

Notas adicionales:
- Las rutas estáticas no se actualizan automáticamente. Si cambia la topología de red, deben actualizarse manualmente.
- Es común usar rutas estáticas en redes pequeñas o como respaldo para protocolos de enrutamiento dinámico.


--------------
--------------
--------------

Guía práctica de configuración de Inter-VLAN Routing en Cisco

Objetivo:
Permitir la comunicación entre diferentes VLANs usando un router o un switch multicapa.

Tipos de Inter-VLAN Routing:
1. Router-on-a-Stick (con router y switch de capa 2)
2. Switch Multicapa (Switch L3 configurando SVI)

---------------------------------------------------
1. Router-on-a-Stick (RoaS)
---------------------------------------------------

Requisitos:
- Switch capa 2 con VLANs configuradas
- Router con subinterfaces
- Trunk entre switch y router

Topología Ejemplo:
- VLAN 10: 192.168.10.0/24
- VLAN 20: 192.168.20.0/24
- Router interfaz G0/0 conectada al switch

Pasos:

a) Crear VLANs en el switch
Switch> enable
Switch# configure terminal
Switch(config)# vlan 10
Switch(config-vlan)# name Ventas
Switch(config-vlan)# exit
Switch(config)# vlan 20
Switch(config-vlan)# name Soporte
Switch(config-vlan)# exit

b) Asignar puertos a las VLANs
Switch(config)# interface fastEthernet0/1
Switch(config-if)# switchport mode access
Switch(config-if)# switchport access vlan 10
Switch(config-if)# exit

Switch(config)# interface fastEthernet0/2
Switch(config-if)# switchport mode access
Switch(config-if)# switchport access vlan 20
Switch(config-if)# exit

c) Configurar el puerto trunk hacia el router
Switch(config)# interface gigabitEthernet0/1
Switch(config-if)# switchport mode trunk
Switch(config-if)# exit

d) Configurar subinterfaces en el router
Router> enable
Router# configure terminal
Router(config)# interface gigabitEthernet0/0.10
Router(config-subif)# encapsulation dot1Q 10
Router(config-subif)# ip address 192.168.10.1 255.255.255.0
Router(config-subif)# exit

Router(config)# interface gigabitEthernet0/0.20
Router(config-subif)# encapsulation dot1Q 20
Router(config-subif)# ip address 192.168.20.1 255.255.255.0
Router(config-subif)# exit

Router(config)# interface gigabitEthernet0/0
Router(config-if)# no shutdown
Router(config-if)# exit

e) Configurar PCs con IPs correspondientes
PC1: IP 192.168.10.10, Gateway 192.168.10.1
PC2: IP 192.168.20.10, Gateway 192.168.20.1

f) Verificación
- Desde cada PC, hacer ping a la IP de la otra VLAN
- Usar show ip interface brief y show vlan en el switch
- show ip route en el router para verificar rutas

---------------------------------------------------
2. Inter-VLAN Routing con Switch Multicapa
---------------------------------------------------

Requisitos:
- Switch L3
- No se necesita router externo
- Se usan interfaces virtuales (SVI)

Pasos:

a) Crear VLANs
Switch(config)# vlan 10
Switch(config-vlan)# name Ventas
Switch(config-vlan)# exit
Switch(config)# vlan 20
Switch(config-vlan)# name Soporte
Switch(config-vlan)# exit

b) Asignar puertos a VLANs (igual que antes)

c) Crear interfaces VLAN (SVI)
Switch(config)# interface vlan 10
Switch(config-if)# ip address 192.168.10.1 255.255.255.0
Switch(config-if)# no shutdown
Switch(config-if)# exit

Switch(config)# interface vlan 20
Switch(config-if)# ip address 192.168.20.1 255.255.255.0
Switch(config-if)# no shutdown
Switch(config-if)# exit

d) Activar el enrutamiento IP en el switch
Switch(config)# ip routing

e) Configurar PCs con IPs y gateways como en RoaS

f) Verificación
- ping entre PCs de VLANs distintas
- show ip interface brief
- show ip route

Notas:
- Router-on-a-stick es ideal para redes pequeñas
- Switch multicapa es más escalable y eficiente en redes medianas o grandes

Fin de la guía.


-----------------
-----------------
-----------------

Guía práctica de configuración de Inter-VLAN Routing en Cisco

Objetivo:
Permitir la comunicación entre diferentes VLANs usando un router o un switch multicapa.

Tipos de Inter-VLAN Routing:
1. Router-on-a-Stick (con router y switch de capa 2)
2. Switch Multicapa (Switch L3 configurando SVI)

---------------------------------------------------
1. Router-on-a-Stick (RoaS)
---------------------------------------------------

Requisitos:
- Switch capa 2 con VLANs configuradas
- Router con subinterfaces
- Trunk entre switch y router

Topología Ejemplo:
- VLAN 10: 192.168.10.0/24
- VLAN 20: 192.168.20.0/24
- Router interfaz G0/0 conectada al switch

Pasos:

a) Crear VLANs en el switch
Switch> enable
Switch# configure terminal
Switch(config)# vlan 10
Switch(config-vlan)# name Ventas
Switch(config-vlan)# exit
Switch(config)# vlan 20
Switch(config-vlan)# name Soporte
Switch(config-vlan)# exit

b) Asignar puertos a las VLANs
Switch(config)# interface fastEthernet0/1
Switch(config-if)# switchport mode access
Switch(config-if)# switchport access vlan 10
Switch(config-if)# exit

Switch(config)# interface fastEthernet0/2
Switch(config-if)# switchport mode access
Switch(config-if)# switchport access vlan 20
Switch(config-if)# exit

c) Configurar el puerto trunk hacia el router
Switch(config)# interface gigabitEthernet0/1
Switch(config-if)# switchport mode trunk
Switch(config-if)# exit

d) Configurar subinterfaces en el router
Router> enable
Router# configure terminal
Router(config)# interface gigabitEthernet0/0.10
Router(config-subif)# encapsulation dot1Q 10
Router(config-subif)# ip address 192.168.10.1 255.255.255.0
Router(config-subif)# exit

Router(config)# interface gigabitEthernet0/0.20
Router(config-subif)# encapsulation dot1Q 20
Router(config-subif)# ip address 192.168.20.1 255.255.255.0
Router(config-subif)# exit

Router(config)# interface gigabitEthernet0/0
Router(config-if)# no shutdown
Router(config-if)# exit

e) Configurar PCs con IPs correspondientes
PC1: IP 192.168.10.10, Gateway 192.168.10.1
PC2: IP 192.168.20.10, Gateway 192.168.20.1

f) Verificación
- Desde cada PC, hacer ping a la IP de la otra VLAN
- Usar show ip interface brief y show vlan en el switch
- show ip route en el router para verificar rutas

---------------------------------------------------
2. Inter-VLAN Routing con Switch Multicapa
---------------------------------------------------

Requisitos:
- Switch L3
- No se necesita router externo
- Se usan interfaces virtuales (SVI)

Pasos:

a) Crear VLANs
Switch(config)# vlan 10
Switch(config-vlan)# name Ventas
Switch(config-vlan)# exit
Switch(config)# vlan 20
Switch(config-vlan)# name Soporte
Switch(config-vlan)# exit

b) Asignar puertos a VLANs (igual que antes)

c) Crear interfaces VLAN (SVI)
Switch(config)# interface vlan 10
Switch(config-if)# ip address 192.168.10.1 255.255.255.0
Switch(config-if)# no shutdown
Switch(config-if)# exit

Switch(config)# interface vlan 20
Switch(config-if)# ip address 192.168.20.1 255.255.255.0
Switch(config-if)# no shutdown
Switch(config-if)# exit

d) Activar el enrutamiento IP en el switch
Switch(config)# ip routing

e) Configurar PCs con IPs y gateways como en RoaS

f) Verificación
- ping entre PCs de VLANs distintas
- show ip interface brief
- show ip route

Notas:
- Router-on-a-stick es ideal para redes pequeñas
- Switch multicapa es más escalable y eficiente en redes medianas o grandes

Fin de la guía.



-----------------
-----------------
-----------------

Guía completa de configuración de ACLs en Cisco IOS

Contenido:
1. ¿Qué es una ACL?
2. Tipos de ACL
3. ACL estándar (Standard ACL)
4. ACL extendida (Extended ACL)
5. ACL nombradas (Named ACL)
6. Aplicación de ACLs a interfaces
7. Ejemplos comunes por protocolo
8. Verificación y comandos útiles

--------------------------------------------------
1. ¿Qué es una ACL?
--------------------------------------------------
Una ACL (Access Control List) es una lista de reglas que filtran tráfico enrutado, permitiendo o denegando paquetes basados en criterios como IP origen/destino, protocolos, puertos, etc.

--------------------------------------------------
2. Tipos de ACL
--------------------------------------------------
- ACL estándar: Filtra solo por IP origen.
- ACL extendida: Filtra por IP origen/destino, protocolo, y puertos.
- ACL nombrada: ACL estándar o extendida con nombre en lugar de número.

--------------------------------------------------
3. ACL Estándar
--------------------------------------------------

Sintaxis:
access-list [1-99] permit|deny [IP origen] [wildcard mask]

Ejemplo 1: Bloquear tráfico de 192.168.1.10
access-list 10 deny 192.168.1.10 0.0.0.0
access-list 10 permit any

Aplicar en interfaz:
interface g0/0
 ip access-group 10 in

Ejemplo 2: Permitir solo 192.168.1.0/24
access-list 10 permit 192.168.1.0 0.0.0.255
access-list 10 deny any

--------------------------------------------------
4. ACL Extendida
--------------------------------------------------

Sintaxis:
access-list [100-199] permit|deny protocol IP_origen wildcard IP_destino wildcard [eq puerto]

Ejemplo 1: Denegar HTTP desde 192.168.1.0 a 172.16.0.0
access-list 100 deny tcp 192.168.1.0 0.0.0.255 172.16.0.0 0.0.255.255 eq 80
access-list 100 permit ip any any

Ejemplo 2: Permitir solo ICMP (ping) a 10.0.0.0
access-list 101 permit icmp any 10.0.0.0 0.0.0.255
access-list 101 deny ip any any

Aplicar:
interface g0/1
 ip access-group 100 in

--------------------------------------------------
5. ACL Nombradas
--------------------------------------------------

Sintaxis:
ip access-list standard|extended NOMBRE
 permit|deny ...

Ejemplo 1: Nombrada estándar
ip access-list standard SOLO_LAN
 deny 192.168.1.50
 permit 192.168.1.0 0.0.0.255

interface g0/0
 ip access-group SOLO_LAN in

Ejemplo 2: Nombrada extendida
ip access-list extended FILTRO_HTTP
 deny tcp 192.168.10.0 0.0.0.255 any eq 80
 permit ip any any

interface g0/1
 ip access-group FILTRO_HTTP out

--------------------------------------------------
6. Aplicación de ACLs a interfaces
--------------------------------------------------

Modo:
interface [nombre]
 ip access-group [número o nombre] in|out

- in: tráfico que entra por esa interfaz
- out: tráfico que sale por esa interfaz

--------------------------------------------------
7. Ejemplos por protocolo y caso
--------------------------------------------------

a) Bloquear acceso HTTP a internet desde una LAN:
access-list 110 deny tcp 192.168.1.0 0.0.0.255 any eq 80
access-list 110 permit ip any any

b) Permitir solo tráfico DNS:
access-list 120 permit udp any any eq 53
access-list 120 permit tcp any any eq 53
access-list 120 deny ip any any

c) Bloquear pings desde red específica:
access-list 130 deny icmp 192.168.10.0 0.0.0.255 any
access-list 130 permit ip any any

d) Bloquear acceso FTP a un servidor específico:
access-list 140 deny tcp any host 10.0.0.5 eq 21
access-list 140 permit ip any any

e) Permitir acceso SSH solo desde una IP:
access-list 150 permit tcp host 192.168.1.50 any eq 22
access-list 150 deny tcp any any eq 22
access-list 150 permit ip any any

f) Bloquear acceso de una subred a otra:
access-list 160 deny ip 192.168.2.0 0.0.0.255 192.168.3.0 0.0.0.255
access-list 160 permit ip any any

--------------------------------------------------
8. Comandos de verificación
--------------------------------------------------

show access-lists
- Muestra todas las ACL configuradas.

show ip interface [interfaz]
- Muestra qué ACL está aplicada a esa interfaz.

debug ip packet
- Muestra paquetes y cómo se aplican las ACLs (útil con precaución).

clear access-list counters
- Reinicia contadores de coincidencias.

--------------------------------------------------
Notas importantes:
- Las ACLs se evalúan de arriba hacia abajo.
- Existe una regla implícita al final: deny all.
- Usa siempre una línea permit ip any any si no quieres que todo lo demás sea bloqueado.
- Las wildcard masks NO son máscaras de subred. 0.0.0.255 equivale a /24.

Fin de la guía.


--------------
--------------
--------------

Ejemplos adicionales: bloqueo de protocolos comunes con ACLs extendidas

IMPORTANTE:
Usar estos comandos en modo de configuración global.

1. Bloquear HTTP (puerto 80)
access-list 200 deny tcp any any eq 80
access-list 200 permit ip any any

2. Bloquear HTTPS (puerto 443)
access-list 201 deny tcp any any eq 443
access-list 201 permit ip any any

3. Bloquear FTP (puerto 21, control) y FTP Data (puerto 20)
access-list 202 deny tcp any any eq 21
access-list 202 deny tcp any any eq 20
access-list 202 permit ip any any

4. Bloquear SSH (puerto 22)
access-list 203 deny tcp any any eq 22
access-list 203 permit ip any any

5. Bloquear Telnet (puerto 23)
access-list 204 deny tcp any any eq 23
access-list 204 permit ip any any

6. Bloquear DNS (puerto 53, TCP y UDP)
access-list 205 deny udp any any eq 53
access-list 205 deny tcp any any eq 53
access-list 205 permit ip any any

7. Bloquear ICMP (bloquear ping)
access-list 206 deny icmp any any
access-list 206 permit ip any any

8. Bloquear tráfico SMTP (puerto 25)
access-list 207 deny tcp any any eq 25
access-list 207 permit ip any any

9. Bloquear tráfico POP3 (puerto 110)
access-list 208 deny tcp any any eq 110
access-list 208 permit ip any any

10. Bloquear tráfico IMAP (puerto 143)
access-list 209 deny tcp any any eq 143
access-list 209 permit ip any any

11. Bloquear tráfico SNMP (puertos 161 y 162)
access-list 210 deny udp any any eq 161
access-list 210 deny udp any any eq 162
access-list 210 permit ip any any

12. Bloquear tráfico RDP (puerto 3389)
access-list 211 deny tcp any any eq 3389
access-list 211 permit ip any any

13. Bloquear tráfico NetBIOS (puertos 137-139)
access-list 212 deny udp any any range 137 139
access-list 212 permit ip any any

14. Bloquear tráfico SMB (puerto 445)
access-list 213 deny tcp any any eq 445
access-list 213 permit ip any any

15. Bloquear tráfico DHCP (puertos 67 y 68 UDP)
access-list 214 deny udp any any eq 67
access-list 214 deny udp any any eq 68
access-list 214 permit ip any any

------------------------------------------------
Aplicación de la ACL (ejemplo)
------------------------------------------------

interface g0/0
 ip access-group 200 in

------------------------------------------------
Verificación:
------------------------------------------------

-----------------
-------------------
-------------------


Guía práctica: uso de Wildcard Masks en Cisco

¿Qué es una wildcard?
----------------------
Una wildcard es una máscara inversa usada por Cisco para definir rangos de direcciones IP en ACLs (Access Control Lists), OSPF, y otras funciones.

Funciona al revés de una máscara de subred:
- Bit 0 en la wildcard: ese bit debe coincidir exactamente.
- Bit 1 en la wildcard: ese bit puede variar.

Fórmula:
Wildcard = 255.255.255.255 - Máscara de subred

-----------------------------------------
Ejemplos básicos de wildcards
-----------------------------------------

1. Wildcard 0.0.0.0
   - Significa coincidencia exacta.
   Ejemplo:
   access-list 10 permit 192.168.1.1 0.0.0.0
   → Solo permite la IP 192.168.1.1

2. Wildcard 0.0.0.255
   - Coincide con todos los hosts en una subred /24
   Ejemplo:
   access-list 10 permit 192.168.1.0 0.0.0.255
   → Permite de 192.168.1.0 a 192.168.1.255

3. Wildcard 0.0.255.255
   - Coincide con una red /16
   Ejemplo:
   access-list 10 permit 192.168.0.0 0.0.255.255
   → Permite de 192.168.0.0 a 192.168.255.255

4. Wildcard 0.255.255.255
   - Coincide con una red /8
   Ejemplo:
   access-list 10 permit 10.0.0.0 0.255.255.255
   → Permite de 10.0.0.0 a 10.255.255.255

5. Wildcard 255.255.255.255
   - Coincide con cualquier IP (equivalente a "any")
   Ejemplo:
   access-list 10 permit any
   → Lo mismo que: access-list 10 permit 0.0.0.0 255.255.255.255

-----------------------------------------
Ejemplos aplicados en ACLs
-----------------------------------------

1. Permitir toda la subred 192.168.1.0/24
access-list 100 permit ip 192.168.1.0 0.0.0.255 any

2. Bloquear solo al host 192.168.5.10
access-list 101 deny ip host 192.168.5.10 any
(O también: access-list 101 deny ip 192.168.5.10 0.0.0.0 any)

3. Permitir solo IPs pares del último octeto (192.168.1.0, .2, .4, etc.)
access-list 102 permit ip 192.168.1.0 0.0.0.254 any
(El bit menos significativo es 0, por lo tanto solo pares)

4. Permitir un bloque de 4 IPs (192.168.1.0 a 192.168.1.3)
access-list 103 permit ip 192.168.1.0 0.0.0.3 any

5. Permitir solo rangos discontinuos
(Ejemplo más complejo: 192.168.1.0 y 192.168.1.4)
access-list 104 permit ip 192.168.1.0 0.0.0.4 any
→ Coincide con .0 y .4

-----------------------------------------
Conversión de máscaras de subred a wildcard
-----------------------------------------

CIDR       Máscara         Wildcard
/30      255.255.255.252   0.0.0.3
/29      255.255.255.248   0.0.0.7
/28      255.255.255.240   0.0.0.15
/27      255.255.255.224   0.0.0.31
/26      255.255.255.192   0.0.0.63
/25      255.255.255.128   0.0.0.127
/24      255.255.255.0     0.0.0.255
/23      255.255.254.0     0.0.1.255
/22      255.255.252.0     0.0.3.255

-----------------------------------------
Uso de host y any
-----------------------------------------

access-list 105 permit ip host 192.168.1.10 any
→ Igual a: access-list 105 permit ip 192.168.1.10 0.0.0.0 any

access-list 106

